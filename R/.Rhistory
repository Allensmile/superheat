data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(yaxis = list(title = 'Transplants per\nmillion population'),
barmode = 'group')
transplants.selected <- transplants %>%
filter(country %in% c("Australia", "Canada",
"United States of America",
"United Kingdom", "France"),
year == 2014)
plot_ly(x = country,
y = total.kidney/population,
name = "Kidney Transplants",
type = "bar",
data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(yaxis = list(title = 'Transplants per\nmillion population'),
barmode = 'group')
transplants.selected <- transplants %>%
filter(!is.null(total.liver),
!is.null(total.kidney),
year == 2014)
nrow(transplants.selected)
plot_ly(x = country,
y = total.kidney/population,
name = "Kidney Transplants",
type = "bar",
data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(yaxis = list(title = 'Transplants per\nmillion population'),
barmode = 'group')
transplants.selected
transplants.selected <- transplants %>%
filter(!is.na(total.liver),
!is.na(total.kidney),
year == 2014)
plot_ly(x = country,
y = total.kidney/population,
name = "Kidney Transplants",
type = "bar",
data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(yaxis = list(title = 'Transplants per\nmillion population'),
barmode = 'group')
nrow(transplants.selected)
transplants.selected %>% arrange(total.liver/population)
transplants.selected %>% arrange(desc(total.liver/population))
transplants.selected <- transplants %>%
filter(country %in% c("China", "India",
"United States of America",
"Belgium", "Portugal",
"France", "Spain", "Canada",
"Australia", "United Kingdon"),
year == 2014)
transplants.selected %>% arrange(desc(total.liver/population))
plot_ly(x = country,
y = total.kidney/population,
name = "Kidney Transplants",
type = "bar",
data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(yaxis = list(title = 'Transplants per\nmillion population'),
barmode = 'group')
transplants.selected <- transplants %>%
filter(country %in% c("United States of America",
"Belgium", "Portugal",
"France", "Spain", "Canada",
"Australia", "United Kingdon"),
year == 2014)
transplants.selected %>% arrange(desc(total.liver/population))
plot_ly(x = country,
y = total.kidney/population,
name = "Kidney Transplants",
type = "bar",
data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(yaxis = list(title = 'Transplants per\nmillion population'),
barmode = 'group')
transplants.selected <- transplants %>%
filter(country %in% c("United States of America",
"Belgium", "Portugal",
"France", "Spain", "Canada",
"Australia", "United Kingdon"),
year == 2001)
transplants.selected %>% arrange(desc(total.liver/population))
plot_ly(x = country,
y = total.kidney/population,
name = "Kidney Transplants",
type = "bar",
data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(yaxis = list(title = 'Transplants per\nmillion population'),
barmode = 'group')
transplants.selected <- transplants %>%
filter(country %in% c("United States of America",
"Belgium", "Portugal",
"France", "Spain", "Canada",
"Australia", "United Kingdon"),
year == 2005)
transplants.selected %>% arrange(desc(total.liver/population))
plot_ly(x = country,
y = total.kidney/population,
name = "Kidney Transplants",
type = "bar",
data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(yaxis = list(title = 'Transplants per\nmillion population'),
barmode = 'group')
plot_ly(x = country,
y = total.kidney/population,
name = "Kidney Transplants",
type = "bar",
data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(title = "2014 Liver and Kidney organ transplants by country ",
yaxis = list(title = 'Transplants per\nmillion population'),
barmode = 'group')
transplants.selected <- transplants %>%
filter(country %in% c("United States of America",
"Belgium", "Portugal",
"France", "Spain", "Canada",
"Australia", "United Kingdom"),
year == 2014)
plot_ly(x = country,
y = total.kidney/population,
name = "Kidney Transplants",
type = "bar",
data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(title = "2014 Liver and Kidney organ transplants by country ",
yaxis = list(title = 'Transplants per\nmillion population'),
barmode = 'group')
plot_ly(x = country,
y = total.kidney/population,
name = "Kidney Transplants",
type = "bar",
data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(title = "2014 Liver and Kidney organ transplants by country ",
yaxis = list(title = 'Transplants per\nmillion population'),
xaxis = list(title = NULL),
barmode = 'group')
plot_ly(x = country,
y = total.kidney/population,
name = "Kidney Transplants",
type = "bar",
data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(title = "2014 Liver and Kidney organ transplants by country ",
yaxis = list(title = 'Transplants per\nmillion population'),
xaxis = list(title = NA),
barmode = 'group')
plot_ly(x = country,
y = total.kidney/population,
name = "Kidney Transplants",
type = "bar",
data = transplants.selected,
hoverinfo = 'text',
text = paste("Total transplants:", total.kidney)) %>%
add_trace(x = country,
y = total.liver/population,
name = 'Liver Transplants',
data = transplants.selected,
hoverinfo = 'text',
type = "bar",
text = paste("Total transplants:", total.liver)) %>%
layout(title = "2014 Liver and Kidney organ transplants\nby country ",
yaxis = list(title = 'Transplants per\nmillion population'),
xaxis = list(title = NA),
barmode = 'group')
setwd("~/Google Drive/Berkeley PhD/Book/bookdown")
install.packages("miniUI")
install.packages("miniUI")
shiny::runApp('~/Google Drive/Berkeley PhD/Book/k-means')
runApp('~/Google Drive/Berkeley PhD/Book/k-means')
set.seed(123)
clust1.x <- rnorm(20, 1, 0.2)
clust1.y <- rnorm(20, 0.8, 0.2)
clust2.x <- rnorm(20, 1.5, 0.1)
clust2.y <- rnorm(20, 1.3, 0.15)
clust3.x <- rnorm(20, 0.2, 0.24)
clust3.y <- rnorm(20, 1.1, 0.1)
data <- data.frame(x = c(clust1.x, clust2.x, clust3.x),
y = c(clust1.y, clust2.y, clust3.y),
cluster = factor(rep(c(1, 2, 3), each = 20)))
runApp('~/Google Drive/Berkeley PhD/Book/k-means')
kmeans(iris[,-5])
kmeans(iris[,-5], 3)
kmeans(iris[,-5], 3)$centers
runApp('~/Google Drive/Berkeley PhD/Book/k-means')
runApp('~/Google Drive/Berkeley PhD/Book/k-means')
runApp('Shiny-apps/k-means')
runApp('Shiny-apps/k-means')
runApp('Shiny-apps/k-means')
p <- superheat(iris[,-5])
library(superheat)
p <- superheat(iris[,-5])
ggplotly(p)
runApp('Shiny-apps/k-means')
setwd("~/Google Drive/Berkeley PhD/Book/bookdown")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
setwd("~/Google Drive/Berkeley PhD/Book/bookdown")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
X <- matrix(rnorm(10 * 4), ncol = 4)
X
colnames(X) <- c("x1", "x2", "x3", "x4")
qq1 <- ggplot(X) + geom_qq(aes(x = x1))
library(ggplot2)
X <- as.data.frame(matrix(rnorm(10 * 4), ncol = 4))
colnames(X) <- c("x1", "x2", "x3", "x4")
qq1 <- ggplot(X) + geom_qq(aes(x = x1))
qq2 <- ggplot(X) + geom_qq(aes(x = x2))
qq3 <- ggplot(X) + geom_qq(aes(x = x3))
qq4 <- ggplot(X) + geom_qq(aes(x = x4))
q1
qq1
?geom_qq
ggplot(X) + geom_qq(aes(sample = x4))
ggplot(X) + geom_qq(aes(sample = x1))
ggplot(X) + geom_qq(aes(sample = x1)) + geom_abline(slope = 1, intercept = 0)
ggplot(X) + geom_qq(aes(sample = x1)) + geom_abline(slope = 1, intercept = 0, lty = 2)
X <- as.data.frame(matrix(rnorm(10 * 4, 0, 3), ncol = 4))
colnames(X) <- c("x1", "x2", "x3", "x4")
qq1 <- ggplot(X) + geom_qq(aes(sample = x1)) +
geom_abline(slope = 1, intercept = 0, lty = 2)
qq2 <- ggplot(X) + geom_qq(aes(sample = x2)) +
geom_abline(slope = 1, intercept = 0, lty = 2)
qq3 <- ggplot(X) + geom_qq(aes(sample = x3)) +
geom_abline(slope = 1, intercept = 0, lty = 2)
qq4 <- ggplot(X) + geom_qq(aes(sample = x4)) +
geom_abline(slope = 1, intercept = 0, lty = 2)
qq1
qq2
qq3
qq4
X <- as.data.frame(matrix(rnorm(10 * 4, 0, 1), ncol = 4))
colnames(X) <- c("x1", "x2", "x3", "x4")
qq1 <- ggplot(X) + geom_qq(aes(sample = x1)) +
geom_abline(slope = 1, intercept = 0, lty = 2)
qq2 <- ggplot(X) + geom_qq(aes(sample = x2)) +
geom_abline(slope = 1, intercept = 0, lty = 2)
qq3 <- ggplot(X) + geom_qq(aes(sample = x3)) +
geom_abline(slope = 1, intercept = 0, lty = 2)
qq4 <- ggplot(X) + geom_qq(aes(sample = x4)) +
geom_abline(slope = 1, intercept = 0, lty = 2)
qq1
qq2
qq3
qq4
setwd("~/Google Drive/Berkeley PhD/Book/bookdown")
bookdown
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
ggplot(X) + geom_histogram(aes(x = x1))
ggplot(X) + geom_histogram(aes(x = x1), binwidth = 0.5)
ggplot(X) + geom_histogram(aes(x = x2), binwidth = 0.5)
ggplot(X) + geom_histogram(aes(x = x3), binwidth = 0.5)
X <- as.data.frame(matrix(rnorm(100 * 4, 0, 1), ncol = 4))
colnames(X) <- c("x1", "x2", "x3", "x4")
colnames(X) <- c("x1", "x2", "x3", "x4")
ggplot(X) + geom_qq(aes(sample = x1)) +
geom_abline(slope = 1, intercept = 0, lty = 2)
ggplot(X) + geom_qq(aes(sample = x2)) +
geom_abline(slope = 1, intercept = 0, lty = 2)
ggplot(X) + geom_qq(aes(sample = x3)) +
geom_abline(slope = 1, intercept = 0, lty = 2)
ggplot(X) + geom_qq(aes(sample = x4)) +
geom_abline(slope = 1, intercept = 0, lty = 2)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
devtools::load_all()
setwd("~/Google Drive/Berkeley PhD/Packages/Supervised Heatmaps/superheat/R")
devtools::load_all()
superheat(iris[,-5], yt = 1:4, yt.obs.col = "red")
devtools::load_all()
superheat(iris[,-5], yt = 1:4, yt.obs.col = "red")
devtools::load_all()
devtools::load_all()
devtools::load_all()
superheat(iris[,-5], yt = 1:4, yt.obs.col = "red")
devtools::load_all()
superheat(iris[,-5], yt = 1:4, yt.obs.col = "red")
devtools::load_all()
superheat(iris[,-5], yt = 1:4, yt.obs.col = "red")
devtools::load_all()
superheat(iris[,-5], yt = 1:4, yt.obs.col = "red", yt.plot.type = "scattersmooth")
superheat(iris[,-5], yt = 1:4, yt.obs.col = "red", yt.plot.type = "scattersmooth")
devtools::load_all()
superheat(iris[,-5], yt = 1:4, yt.obs.col = "red", yt.plot.type = "scattersmooth")
superheat(iris[,-5], yt = 1:4, yt.obs.col = "red", yt.plot.type = "smooth")
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "line")
devtools::load_all()
superheat(iris[,-5], yt = 1:4, yt.obs.col = "red", yt.plot.type = "scattersmooth")
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "scattersmooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "scattersmooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "scattersmooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "scattersmooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "scattersmooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.obs.col = "red", yr.plot.type = "smooth")
superheat(iris[,-5], yr = 1:150, yr.line.col = "red", yr.plot.type = "smooth")
superheat(iris[,-5], yr = 1:150, yr.line.col = "grey", yr.plot.type = "smooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "smooth")
superheat(iris[,-5], yr = 1:150, yr.plot.type = "scattersmooth")
superheat(iris[,-5], yr = 1:150, yr.plot.type = "smooth")
devtools::load_all()
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "scattersmooth")
devtools::load_all()
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "scattersmooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "scattersmooth")
superheat(iris[,-5], yr = 1:150, yr.plot.type = "scattersmooth", pretty.order.rows = FALSE)
superheat(iris[,-5], yr = 1:150, yr.plot.type = "scattersmooth")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "line")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "line")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "line")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "line")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "line")
superheat(iris[,-5], yr = 1:150, yr.plot.type = "scatterline")
superheat(iris[,-5], yr = 1:150, yr.plot.type = "line")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "scatterline")
superheat(iris[,-5], yr = 1:150, yr.plot.type = "scatter")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "bar")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "bar")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "bar")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "bar")
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "bar")
superheat(iris[,-5], yt = 1:4, yt.plot.type = "bar")
devtools::load_all()
superheat(iris[,-5], yt = 1:4, yt.plot.type = "boxplot")
superheat(iris[,-5], yr = 1:150, yr.plot.type = "boxplot")
superheat(iris[,-5], yr = 1:150, yr.plot.type = "boxplot", n.clusters.rows = 2)
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "boxplot", n.clusters.rows = 2)
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "boxplot", n.clusters.rows = 2)
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "boxplot", n.clusters.rows = 2)
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "boxplot", n.clusters.rows = 2)
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "boxplot", n.clusters.rows = 2)
devtools::load_all()
superheat(iris[,-5], yr = 1:150, yr.plot.type = "boxplot", n.clusters.rows = 2)
superheat(iris[,-5], yr = 1:150, yr.plot.type = "boxplot", n.clusters.rows = 2)
superheat(iris[,-5], yr = 1:150, yr.plot.type = "bar", n.clusters.rows = 2)
superheat(iris[,-5], yr = 1:2, yr.plot.type = "bar", n.clusters.rows = 2)
superheat(iris[,-5], yr = 1:3, yr.plot.type = "bar", n.clusters.rows = 2)
superheat(iris[,-5], yr = 1:2, yr.plot.type = "bar", n.clusters.rows = 2)
devtools::load_all()
superheat(iris[,-5], yr = 1:2, yr.plot.type = "bar", n.clusters.rows = 2)
devtools::load_all()
superheat(iris[,-5], yr = 1:2, yr.plot.type = "bar", n.clusters.rows = 2)
devtools::load_all()
superheat(iris[,-5], yr = 1:2, yr.plot.type = "bar", n.clusters.rows = 2)
devtools::load_all()
superheat(iris[,-5], yr = 1:2, yr.plot.type = "bar", n.clusters.rows = 2)
devtools::load_all()
superheat(iris[,-5], yr = 1:2, yr.plot.type = "bar", n.clusters.rows = 2)
devtools::load_all()
superheat(iris[,-5], yr = 1:2, yr.plot.type = "bar", n.clusters.rows = 2)
